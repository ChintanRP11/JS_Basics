let taskAPI = "https://www.boredapi.com/api/activity"

// promise with external funcitons.

// let promise = fetch(taskAPI).then(gotData).then(printData).catch(gotErr);
// function gotData(data) {
//     return data.json()
// }

// function printData(jsondata) {
//     console.log(jsondata.activity);
// }

// function gotErr(err) {
//     console.error(err);
// }

// in above line fetch() with fetch the data from the link but it takes little time so we wait until its fetched. So, we used then() for waiting for response.
// after some time we got response from fetch() it will be argument for function in following then().

// here, data is the response generated by fetch() function.
// now function in next then() takes argument generated by previous then(). So, in this case data.json() is the argument for the printData().

// while catch() continuously look for any error. if error then it executes catch() part






// // now shortening above code.
// fetch(taskAPI)
// .then(data => data.json())
// .then(json => console.log(json.activity))
// .catch(err => console.error(err))


// with multiple APIs
let joke = "https://official-joke-api.appspot.com/random_joke";
fetch(taskAPI)
.then(data => data.json())
.then(json => {
    console.log("Task: ",json.activity);
    return fetch(joke);
})
.then(data => data.json())
.then(json => console.log(json.setup, json.punchline))
.catch(err => console.error(err))
